#version 430
in vec3 fcolor;
in vec2 ftexcoord;
in vec3 fposition;
in vec3 fnormal;
in float ffogcoord;
uniform sampler2D blockAtlas;
uniform float fogDensity;
uniform vec4 fogColor;
uniform vec3 viewPos;
uniform vec3 lightDir;
out vec4 outcolor;
const float shininess = 32.0;
void main() {
	float fogFactor = exp(-pow(fogDensity*ffogcoord, 5.0));
	fogFactor = 1.0-clamp(fogFactor, 0.0, 1.0);
	
	// Specular
	vec3 viewDir = normalize(viewPos - fposition);
	vec3 reflectDir = reflect(-lightDir, fnormal);
	float spec = pow(max(dot(viewDir, reflectDir), 0.0), shininess);
	
	// Final
	vec4 ocolor = texture2D(blockAtlas, ftexcoord) * vec4(fcolor + spec * 0.2, 1.0);
	ocolor.a = 0.75;
	outcolor = mix(ocolor, fogColor, fogFactor);
}