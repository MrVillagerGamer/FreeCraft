#version 430
layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec3 color;
layout(location = 3) in vec2 texcoord;
out vec3 fcolor;
out vec2 ftexcoord;
out float ffogcoord;
out vec3 fposition;
uniform mat4 projectionMatrix;
uniform mat4 modelviewMatrix;
uniform vec3 lightDir;
float getBrightness() {
	float f1 = dot(normal, lightDir) * 0.5 + 0.5;
	float f2 = dot(normal, -lightDir) * 0.5 + 0.5;
	if(length(f1) > length(f2)) return f1 * (sign(lightDir.y) * pow(abs(lightDir.y), 0.5) * 0.5f + 0.5f);
	return f2 * (sign(lightDir.y) * pow(abs(lightDir.y), 0.5) * 0.5f + 0.5f);
}
void main() {
	gl_Position = projectionMatrix * modelviewMatrix * vec4(position, 1);
	ffogcoord = length(gl_Position.xyz);
	float skyLight = color.r*0.9+0.1;
	float blockLight = color.g*0.9+0.1;
	float ao = color.b;
	float light = max(getBrightness()*skyLight, blockLight);
	fcolor = vec3(light);
	fcolor *= ao;
	ftexcoord = texcoord;
	fposition = position;
}